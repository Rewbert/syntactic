Name:           syntactic
Version:        2.0
Synopsis:       Generic representation and manipulation of abstract syntax
Description:    The library provides a generic representation of abstract syntax trees (or data
                types in general). It also permits the definition of open syntax trees based on the
                technique in Data Types à la Carte [1].
                .
                For more information, see
                \"A Generic Abstract Syntax Model for Embedded Languages\"
                (ICFP 2012):
                .
                  * Paper:
                    <http://www.cse.chalmers.se/~emax/documents/axelsson2012generic.pdf>
                .
                  * Slides:
                    <http://www.cse.chalmers.se/~emax/documents/axelsson2012generic-slides.pdf>
                .
                There is also an example EDSL in the @examples@ folder.
                .
                \[1\] W. Swierstra. Data Types à la Carte.
                /Journal of Functional Programming/, 18(4):423-436, 2008,
                <http://dx.doi.org/10.1017/S0956796808006758>.
License:        BSD3
License-file:   LICENSE
Author:         Emil Axelsson
Maintainer:     emax@chalmers.se
Copyright:      Copyright (c) 2011-2013, Emil Axelsson
Homepage:       http://hub.darcs.net/emax/syntactic
Bug-reports:    http://hub.darcs.net/emax/syntactic/issues
Category:       Language
Build-type:     Simple
Cabal-version:  >=1.10
Tested-with:    GHC==7.6.2, GHC==7.4.2

extra-source-files:
  CONTRIBUTORS
  tests/gold/*.txt

source-repository head
  type:     darcs
  location: http://hub.darcs.net/emax/syntactic

library
  exposed-modules:
    Data.PolyProxy
    Data.Syntactic
    Data.Syntactic.Syntax
    Data.Syntactic.Traversal
    Data.Syntactic.Constraint
    Data.Syntactic.Sugar
    Data.Syntactic.Interpretation.Equality
    Data.Syntactic.Interpretation.Evaluation
    Data.Syntactic.Interpretation.Render
    Data.Syntactic.Interpretation.Semantics
    Data.Syntactic.Decoration

  build-depends:
    array,
    base >= 4 && < 4.8,
    containers,
    constraints,
    data-hash,
    ghc-prim,
    mtl >= 2 && < 3,
    template-haskell,
    transformers >= 0.2,
    tuple >= 0.2

  hs-source-dirs: src

  default-language: Haskell2010

  default-extensions:
    ConstraintKinds
    DeriveDataTypeable
    DeriveFunctor
    DeriveFoldable
    DeriveTraversable
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    Rank2Types
    ScopedTypeVariables
    TypeFamilies
    TypeOperators

  other-extensions:
    OverlappingInstances
    TemplateHaskell
    UndecidableInstances

test-suite NanoFeldspar
  type: exitcode-stdio-1.0

  hs-source-dirs: tests examples

  main-is: NanoFeldsparTest.hs

  default-language: Haskell2010

  default-extensions:
    FlexibleContexts
    FlexibleInstances
    GADTs
    ScopedTypeVariables
    TypeFamilies
    TypeOperators
    UndecidableInstances

  other-extensions:
    TemplateHaskell

  build-depends:
    syntactic,
    base,
    bytestring,
    containers,
    test-framework >= 0.6,
    test-framework-golden >= 1.1
